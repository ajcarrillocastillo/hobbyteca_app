/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hobbyteca.vista;

import javax.swing.JMenu;
import javax.swing.JOptionPane;
import hobbyteca.controlador.ControladorVentanaPrincipal;
import hobbyteca.controlador.TableModelNoEditable;
import java.applet.AudioClip;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;

/**
 *
 * @author jesus
 */
public class Principal extends javax.swing.JFrame {

    private final ControladorVentanaPrincipal controladorVentanaPrincipal;
    private TableModelNoEditable modeloTablaPelicula = new TableModelNoEditable();
    private TableModelNoEditable modeloTablaSerie = new TableModelNoEditable();
    private TableModelNoEditable modeloTablaVideoJuego = new TableModelNoEditable();
    private TableModelNoEditable modeloTablaMusica = new TableModelNoEditable();
    private TableModelNoEditable modeloTablaManga = new TableModelNoEditable();
    private TableModelNoEditable modeloTablaLibro = new TableModelNoEditable();
    private TableModelNoEditable modeloTablaComic = new TableModelNoEditable();
    /**
     * Creates new form Principal
     *
     * @throws java.sql.SQLException
     */
    public Principal() throws SQLException {
        initComponents();
        controladorVentanaPrincipal = new ControladorVentanaPrincipal(this);
        jTableMiListaPeliculas.setModel(modeloTablaPelicula);
        jTableMiListaSeries.setModel(modeloTablaSerie);
        jTableMiListaVideoJuegos.setModel(modeloTablaVideoJuego);
        jTableMiListaMusica.setModel(modeloTablaMusica);
        jTableMiListaMangas.setModel(modeloTablaManga);
        jTableMiListaLibros.setModel(modeloTablaLibro);
        jTableMiListaComics.setModel(modeloTablaComic);
        controladorVentanaPrincipal.CrearTablaPeliculas(modeloTablaPelicula);
        controladorVentanaPrincipal.CrearTablaSeries(modeloTablaSerie);
        controladorVentanaPrincipal.CrearTablaVideojuego(modeloTablaVideoJuego);
        controladorVentanaPrincipal.CrearTablaMusica(modeloTablaMusica);
        controladorVentanaPrincipal.CrearTablaManga(modeloTablaManga);
        controladorVentanaPrincipal.CrearTablaLibro(modeloTablaLibro);
        controladorVentanaPrincipal.CrearTablaComic(modeloTablaComic);
        controladorVentanaPrincipal.LLenarTablaPeliculas(modeloTablaPelicula);
        controladorVentanaPrincipal.LLenarTablaSeries(modeloTablaSerie);
        controladorVentanaPrincipal.LLenarTablaVideojuego(modeloTablaVideoJuego);
        controladorVentanaPrincipal.LLenarTablaMusica(modeloTablaMusica);
        controladorVentanaPrincipal.LLenarTablaManga(modeloTablaManga);
        controladorVentanaPrincipal.LLenarTablaLibro(modeloTablaLibro);
        controladorVentanaPrincipal.LLenarTablaComic(modeloTablaComic);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelContenedor = new javax.swing.JPanel();
        jTabbedPaneMiLista = new javax.swing.JTabbedPane();
        jPanelMiListaPeliculas = new javax.swing.JPanel();
        jScrollPaneMiListaPeliculas = new javax.swing.JScrollPane();
        jTableMiListaPeliculas = new javax.swing.JTable();
        jLabelBuscadorPelicuas = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloPeliculas = new javax.swing.JTextField();
        jPanelMiListaSeries = new javax.swing.JPanel();
        jScrollPaneMiListaSeries = new javax.swing.JScrollPane();
        jTableMiListaSeries = new javax.swing.JTable();
        jLabelBuscadorSeries = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloSeries = new javax.swing.JTextField();
        jPanelMiListaVideoJuegos = new javax.swing.JPanel();
        jScrollPaneMiListaVideoJuegos = new javax.swing.JScrollPane();
        jTableMiListaVideoJuegos = new javax.swing.JTable();
        jLabelBuscadorVideoJuegos = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloVideoJuegos = new javax.swing.JTextField();
        jPanelMiListaMusica = new javax.swing.JPanel();
        jScrollPaneMiListaMusica = new javax.swing.JScrollPane();
        jTableMiListaMusica = new javax.swing.JTable();
        jLabelBuscadorMusica = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloMusica = new javax.swing.JTextField();
        jPanelMiListaLibros = new javax.swing.JPanel();
        jScrollPaneMiListaLibros = new javax.swing.JScrollPane();
        jTableMiListaLibros = new javax.swing.JTable();
        jLabelBuscadorLibros = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloLibros = new javax.swing.JTextField();
        jPanelMiListaMangas = new javax.swing.JPanel();
        jScrollPaneMiListaMangas = new javax.swing.JScrollPane();
        jTableMiListaMangas = new javax.swing.JTable();
        jLabelBuscadorMangas = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloMangas = new javax.swing.JTextField();
        jPanelMiListaComics = new javax.swing.JPanel();
        jScrollPaneMiListaComics = new javax.swing.JScrollPane();
        jTableMiListaComics = new javax.swing.JTable();
        jLabelBuscadorComics = new javax.swing.JLabel();
        jTextFieldBuscarPorTituloComics = new javax.swing.JTextField();
        jMenuBarSeleccio = new javax.swing.JMenuBar();
        jMenuAgregarMiLista = new javax.swing.JMenu();
        jMenuItemAgregarMiListaPeliculas = new javax.swing.JMenuItem();
        jMenuItemAgregarMiListaSeries = new javax.swing.JMenuItem();
        jMenuItemAgregarMiListaMusica = new javax.swing.JMenuItem();
        jMenuItemAgregarMiListaManga = new javax.swing.JMenuItem();
        jMenuItemAgregarMiListaComic = new javax.swing.JMenuItem();
        jMenuItemVideoJuegos = new javax.swing.JMenuItem();
        jMenuItemAgregarMiListaLibros = new javax.swing.JMenuItem();
        jMenuItemAgregarMiLista = new javax.swing.JMenu();
        jMenuItemNuevoMultimediaPelicula = new javax.swing.JMenuItem();
        jMenuItemNuevoMultimediaSerie = new javax.swing.JMenuItem();
        jMenuItemNuevoMultimediaMusica = new javax.swing.JMenuItem();
        jMenuItemNuevoMultimediaLibro = new javax.swing.JMenuItem();
        jMenuItemNuevoMultimediaManga = new javax.swing.JMenuItem();
        jMenuItemNuevoMultimediaComic = new javax.swing.JMenuItem();
        jMenuItemNuevoMultimediaVideoJuego = new javax.swing.JMenuItem();
        jMenuUsuario = new javax.swing.JMenu();
        jMenuItemLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana Principal");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTableMiListaPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Visto", "Borrar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaPeliculas.getTableHeader().setReorderingAllowed(false);
        jTableMiListaPeliculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaPeliculasMouseClicked(evt);
            }
        });
        jScrollPaneMiListaPeliculas.setViewportView(jTableMiListaPeliculas);
        if (jTableMiListaPeliculas.getColumnModel().getColumnCount() > 0) {
            jTableMiListaPeliculas.getColumnModel().getColumn(0).setResizable(false);
            jTableMiListaPeliculas.getColumnModel().getColumn(1).setResizable(false);
            jTableMiListaPeliculas.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabelBuscadorPelicuas.setText("Buscador");

        jTextFieldBuscarPorTituloPeliculas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloPeliculasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaPeliculasLayout = new javax.swing.GroupLayout(jPanelMiListaPeliculas);
        jPanelMiListaPeliculas.setLayout(jPanelMiListaPeliculasLayout);
        jPanelMiListaPeliculasLayout.setHorizontalGroup(
            jPanelMiListaPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaPeliculas, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaPeliculasLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorPelicuas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaPeliculasLayout.setVerticalGroup(
            jPanelMiListaPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaPeliculasLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMiListaPeliculasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorPelicuas))
                .addGap(0, 47, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("Películas", jPanelMiListaPeliculas);

        jTableMiListaSeries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Cap Vistos", "Cap totales", "Borrar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaSeries.getTableHeader().setReorderingAllowed(false);
        jTableMiListaSeries.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaSeriesMouseClicked(evt);
            }
        });
        jScrollPaneMiListaSeries.setViewportView(jTableMiListaSeries);

        jLabelBuscadorSeries.setText("Buscador");

        jTextFieldBuscarPorTituloSeries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloSeriesKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaSeriesLayout = new javax.swing.GroupLayout(jPanelMiListaSeries);
        jPanelMiListaSeries.setLayout(jPanelMiListaSeriesLayout);
        jPanelMiListaSeriesLayout.setHorizontalGroup(
            jPanelMiListaSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaSeries, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaSeriesLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorSeries)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaSeriesLayout.setVerticalGroup(
            jPanelMiListaSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaSeriesLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMiListaSeriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorSeries))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("Series", jPanelMiListaSeries);

        jTableMiListaVideoJuegos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Jugado", "Borrar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaVideoJuegos.getTableHeader().setReorderingAllowed(false);
        jTableMiListaVideoJuegos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaVideoJuegosMouseClicked(evt);
            }
        });
        jScrollPaneMiListaVideoJuegos.setViewportView(jTableMiListaVideoJuegos);

        jLabelBuscadorVideoJuegos.setText("Buscador");

        jTextFieldBuscarPorTituloVideoJuegos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloVideoJuegosKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaVideoJuegosLayout = new javax.swing.GroupLayout(jPanelMiListaVideoJuegos);
        jPanelMiListaVideoJuegos.setLayout(jPanelMiListaVideoJuegosLayout);
        jPanelMiListaVideoJuegosLayout.setHorizontalGroup(
            jPanelMiListaVideoJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaVideoJuegos, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaVideoJuegosLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorVideoJuegos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloVideoJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaVideoJuegosLayout.setVerticalGroup(
            jPanelMiListaVideoJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaVideoJuegosLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaVideoJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMiListaVideoJuegosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloVideoJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorVideoJuegos))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("VideoJuegos", jPanelMiListaVideoJuegos);

        jTableMiListaMusica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Escuchado", "Borrar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaMusica.getTableHeader().setReorderingAllowed(false);
        jTableMiListaMusica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaMusicaMouseClicked(evt);
            }
        });
        jScrollPaneMiListaMusica.setViewportView(jTableMiListaMusica);

        jLabelBuscadorMusica.setText("Buscador");

        jTextFieldBuscarPorTituloMusica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloMusicaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaMusicaLayout = new javax.swing.GroupLayout(jPanelMiListaMusica);
        jPanelMiListaMusica.setLayout(jPanelMiListaMusicaLayout);
        jPanelMiListaMusicaLayout.setHorizontalGroup(
            jPanelMiListaMusicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaMusica, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaMusicaLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorMusica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloMusica, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaMusicaLayout.setVerticalGroup(
            jPanelMiListaMusicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaMusicaLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaMusica, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMiListaMusicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloMusica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorMusica))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("Música", jPanelMiListaMusica);

        jTableMiListaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Leido", "Borrar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaLibros.getTableHeader().setReorderingAllowed(false);
        jTableMiListaLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaLibrosMouseClicked(evt);
            }
        });
        jScrollPaneMiListaLibros.setViewportView(jTableMiListaLibros);

        jLabelBuscadorLibros.setText("Buscador");

        jTextFieldBuscarPorTituloLibros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloLibrosKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaLibrosLayout = new javax.swing.GroupLayout(jPanelMiListaLibros);
        jPanelMiListaLibros.setLayout(jPanelMiListaLibrosLayout);
        jPanelMiListaLibrosLayout.setHorizontalGroup(
            jPanelMiListaLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaLibros, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaLibrosLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorLibros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloLibros, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaLibrosLayout.setVerticalGroup(
            jPanelMiListaLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaLibrosLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaLibros, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMiListaLibrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorLibros))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("Libros", jPanelMiListaLibros);

        jTableMiListaMangas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Tomos Leidos", "Tomos Totales", "Borrar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaMangas.getTableHeader().setReorderingAllowed(false);
        jTableMiListaMangas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaMangasMouseClicked(evt);
            }
        });
        jScrollPaneMiListaMangas.setViewportView(jTableMiListaMangas);

        jLabelBuscadorMangas.setText("Buscador");

        jTextFieldBuscarPorTituloMangas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloMangasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaMangasLayout = new javax.swing.GroupLayout(jPanelMiListaMangas);
        jPanelMiListaMangas.setLayout(jPanelMiListaMangasLayout);
        jPanelMiListaMangasLayout.setHorizontalGroup(
            jPanelMiListaMangasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaMangas, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaMangasLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorMangas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloMangas, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaMangasLayout.setVerticalGroup(
            jPanelMiListaMangasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaMangasLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaMangas, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMiListaMangasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloMangas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorMangas))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("Mangas", jPanelMiListaMangas);

        jTableMiListaComics.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Título", "Lanzamiento", "Género", "Valoración", "Nº Leidos", "Nº Totales", "Borrar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMiListaComics.getTableHeader().setReorderingAllowed(false);
        jTableMiListaComics.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMiListaComicsMouseClicked(evt);
            }
        });
        jScrollPaneMiListaComics.setViewportView(jTableMiListaComics);

        jLabelBuscadorComics.setText("Buscador");

        jTextFieldBuscarPorTituloComics.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarPorTituloComicsKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelMiListaComicsLayout = new javax.swing.GroupLayout(jPanelMiListaComics);
        jPanelMiListaComics.setLayout(jPanelMiListaComicsLayout);
        jPanelMiListaComicsLayout.setHorizontalGroup(
            jPanelMiListaComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneMiListaComics, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
            .addGroup(jPanelMiListaComicsLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabelBuscadorComics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldBuscarPorTituloComics, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelMiListaComicsLayout.setVerticalGroup(
            jPanelMiListaComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMiListaComicsLayout.createSequentialGroup()
                .addComponent(jScrollPaneMiListaComics, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelMiListaComicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldBuscarPorTituloComics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBuscadorComics))
                .addGap(0, 55, Short.MAX_VALUE))
        );

        jTabbedPaneMiLista.addTab("Comics", jPanelMiListaComics);

        javax.swing.GroupLayout jPanelContenedorLayout = new javax.swing.GroupLayout(jPanelContenedor);
        jPanelContenedor.setLayout(jPanelContenedorLayout);
        jPanelContenedorLayout.setHorizontalGroup(
            jPanelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContenedorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPaneMiLista, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelContenedorLayout.setVerticalGroup(
            jPanelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContenedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPaneMiLista, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuAgregarMiLista.setText("Agregar a MiLista");
        jMenuAgregarMiLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuAgregarMiListaActionPerformed(evt);
            }
        });

        jMenuItemAgregarMiListaPeliculas.setText("Películas");
        jMenuItemAgregarMiListaPeliculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarMiListaPeliculasActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemAgregarMiListaPeliculas);

        jMenuItemAgregarMiListaSeries.setText("Series");
        jMenuItemAgregarMiListaSeries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarMiListaSeriesActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemAgregarMiListaSeries);

        jMenuItemAgregarMiListaMusica.setText("Música");
        jMenuItemAgregarMiListaMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarMiListaMusicaActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemAgregarMiListaMusica);

        jMenuItemAgregarMiListaManga.setText("Manga");
        jMenuItemAgregarMiListaManga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarMiListaMangaActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemAgregarMiListaManga);

        jMenuItemAgregarMiListaComic.setText("Comic");
        jMenuItemAgregarMiListaComic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarMiListaComicActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemAgregarMiListaComic);

        jMenuItemVideoJuegos.setText("VideoJuegos");
        jMenuItemVideoJuegos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVideoJuegosActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemVideoJuegos);

        jMenuItemAgregarMiListaLibros.setText("Libros");
        jMenuItemAgregarMiListaLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAgregarMiListaLibrosActionPerformed(evt);
            }
        });
        jMenuAgregarMiLista.add(jMenuItemAgregarMiListaLibros);

        jMenuBarSeleccio.add(jMenuAgregarMiLista);

        jMenuItemAgregarMiLista.setText("Nuevo Multimedia");

        jMenuItemNuevoMultimediaPelicula.setText("Pelicula");
        jMenuItemNuevoMultimediaPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaPeliculaActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaPelicula);

        jMenuItemNuevoMultimediaSerie.setText("Serie");
        jMenuItemNuevoMultimediaSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaSerieActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaSerie);

        jMenuItemNuevoMultimediaMusica.setText("Musica");
        jMenuItemNuevoMultimediaMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaMusicaActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaMusica);

        jMenuItemNuevoMultimediaLibro.setText("Libro");
        jMenuItemNuevoMultimediaLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaLibroActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaLibro);

        jMenuItemNuevoMultimediaManga.setText("Manga");
        jMenuItemNuevoMultimediaManga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaMangaActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaManga);

        jMenuItemNuevoMultimediaComic.setText("Cómic");
        jMenuItemNuevoMultimediaComic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaComicActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaComic);

        jMenuItemNuevoMultimediaVideoJuego.setText("VideoJuego");
        jMenuItemNuevoMultimediaVideoJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoMultimediaVideoJuegoActionPerformed(evt);
            }
        });
        jMenuItemAgregarMiLista.add(jMenuItemNuevoMultimediaVideoJuego);

        jMenuBarSeleccio.add(jMenuItemAgregarMiLista);

        jMenuUsuario.setText("Usuario");
        jMenuUsuario.setFocusable(false);

        jMenuItemLogout.setText("Logout");
        jMenuItemLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLogoutActionPerformed(evt);
            }
        });
        jMenuUsuario.add(jMenuItemLogout);

        jMenuBarSeleccio.add(jMenuUsuario);

        setJMenuBar(jMenuBarSeleccio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLogoutActionPerformed
        controladorVentanaPrincipal.logout();


    }//GEN-LAST:event_jMenuItemLogoutActionPerformed

    private void jMenuItemNuevoMultimediaPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaPeliculaActionPerformed
        controladorVentanaPrincipal.AbrirAñadirPelicula();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaPeliculaActionPerformed

    private void jMenuItemAgregarMiListaPeliculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarMiListaPeliculasActionPerformed
        controladorVentanaPrincipal.AbrirPeliculaMiLista();
    }//GEN-LAST:event_jMenuItemAgregarMiListaPeliculasActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        try {
            controladorVentanaPrincipal.LLenarTablaPeliculas(modeloTablaPelicula);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaPeliculas.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaLibro(modeloTablaLibro);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaLibros.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaSeries(modeloTablaSerie);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaSeries.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaManga(modeloTablaManga);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaMangas.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaComic(modeloTablaComic);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaComics.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaLibro(modeloTablaLibro);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaLibros.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaVideojuego(modeloTablaVideoJuego);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaVideoJuegos.repaint();
        try {
            controladorVentanaPrincipal.LLenarTablaMusica(modeloTablaMusica);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
        }
        jTableMiListaMusica.repaint();
    }//GEN-LAST:event_formWindowActivated

    private void jTextFieldBuscarPorTituloComicsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloComicsKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloComics, jTableMiListaComics);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloComicsKeyTyped

    private void jTableMiListaComicsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaComicsMouseClicked
        int columna = jTableMiListaComics.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaComics.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                controladorVentanaPrincipal.AbrirVerComic(jTableMiListaComics.getValueAt(fila, columna).toString());
                break;

            case 6: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaComics.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarComicMiLista(jTableMiListaComics.getValueAt(fila, 0).toString());
                        controladorVentanaPrincipal.LLenarTablaComic(modeloTablaComic);
                        jTableMiListaComics.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el Administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }
    }//GEN-LAST:event_jTableMiListaComicsMouseClicked

    private void jTextFieldBuscarPorTituloMangasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloMangasKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloMangas, jTableMiListaMangas);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloMangasKeyTyped

    private void jTableMiListaMangasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaMangasMouseClicked
        int columna = jTableMiListaMangas.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaMangas.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                controladorVentanaPrincipal.AbrirVerManga(jTableMiListaMangas.getValueAt(fila, columna).toString());
                break;

            case 6: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaMangas.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarMangaMiLista(jTableMiListaMangas.getValueAt(fila, 0).toString());
                        controladorVentanaPrincipal.LLenarTablaManga(modeloTablaManga);
                        jTableMiListaMangas.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el Administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }
    }//GEN-LAST:event_jTableMiListaMangasMouseClicked

    private void jTextFieldBuscarPorTituloLibrosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloLibrosKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloLibros, jTableMiListaLibros);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloLibrosKeyTyped

    private void jTableMiListaLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaLibrosMouseClicked
        int columna = jTableMiListaLibros.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaLibros.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                controladorVentanaPrincipal.AbrirVerLibro(jTableMiListaLibros.getValueAt(fila, columna).toString());
                break;

            case 5: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaLibros.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarLibroMiLista(jTableMiListaLibros.getValueAt(fila, 0).toString());
                        controladorVentanaPrincipal.LLenarTablaLibro(modeloTablaLibro);
                        jTableMiListaLibros.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el Administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }
    }//GEN-LAST:event_jTableMiListaLibrosMouseClicked

    private void jTextFieldBuscarPorTituloMusicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloMusicaKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloMusica, jTableMiListaMusica);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloMusicaKeyTyped

    private void jTableMiListaMusicaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaMusicaMouseClicked
        int columna = jTableMiListaMusica.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaMusica.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                controladorVentanaPrincipal.AbrirVerMusica(jTableMiListaMusica.getValueAt(fila, 1).toString());
                break;

            case 6: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaMusica.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarMusicaMiLista(jTableMiListaMusica.getValueAt(fila, 1).toString());
                        controladorVentanaPrincipal.LLenarTablaMusica(modeloTablaMusica);
                        jTableMiListaMusica.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }
    }//GEN-LAST:event_jTableMiListaMusicaMouseClicked

    private void jTextFieldBuscarPorTituloVideoJuegosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloVideoJuegosKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloVideoJuegos, jTableMiListaVideoJuegos);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloVideoJuegosKeyTyped

    private void jTableMiListaVideoJuegosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaVideoJuegosMouseClicked
        int columna = jTableMiListaVideoJuegos.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaVideoJuegos.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                controladorVentanaPrincipal.AbrirVerVideojuego(jTableMiListaVideoJuegos.getValueAt(fila, columna).toString());
                break;

            case 5: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaVideoJuegos.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarVideojuegoMiLista(jTableMiListaVideoJuegos.getValueAt(fila, 0).toString());
                        controladorVentanaPrincipal.LLenarTablaVideojuego(modeloTablaVideoJuego);
                        jTableMiListaVideoJuegos.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el Administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }
    }//GEN-LAST:event_jTableMiListaVideoJuegosMouseClicked

    private void jTextFieldBuscarPorTituloSeriesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloSeriesKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloSeries, jTableMiListaSeries);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloSeriesKeyTyped

    private void jTextFieldBuscarPorTituloPeliculasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarPorTituloPeliculasKeyTyped
        controladorVentanaPrincipal.buscador(jTextFieldBuscarPorTituloPeliculas, jTableMiListaPeliculas);
    }//GEN-LAST:event_jTextFieldBuscarPorTituloPeliculasKeyTyped

    private void jTableMiListaPeliculasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaPeliculasMouseClicked
        int columna = jTableMiListaPeliculas.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaPeliculas.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                if (jTableMiListaPeliculas.getValueAt(fila, columna).toString().contains("Star Wars")) {
                    AudioClip sonido;
                    java.applet.Applet.newAudioClip(getClass().getResource("../sonido/light-saber-on.wav")).play();
                }
                controladorVentanaPrincipal.AbrirVerPelicula(jTableMiListaPeliculas.getValueAt(fila, columna).toString());
                break;

            case 5: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaPeliculas.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarPeliculaMiLista(jTableMiListaPeliculas.getValueAt(fila, 0).toString());
                        controladorVentanaPrincipal.LLenarTablaPeliculas(modeloTablaPelicula);
                        jTableMiListaPeliculas.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }                
    }//GEN-LAST:event_jTableMiListaPeliculasMouseClicked

    private void jMenuItemAgregarMiListaSeriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarMiListaSeriesActionPerformed
        controladorVentanaPrincipal.AbrirSerieMiLista();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemAgregarMiListaSeriesActionPerformed

    private void jMenuItemAgregarMiListaLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarMiListaLibrosActionPerformed
        controladorVentanaPrincipal.AbrirLibroMiLista();
    }//GEN-LAST:event_jMenuItemAgregarMiListaLibrosActionPerformed

    private void jMenuItemNuevoMultimediaLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaLibroActionPerformed
        controladorVentanaPrincipal.AbrirAñadirLibro();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaLibroActionPerformed

    private void jMenuItemNuevoMultimediaSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaSerieActionPerformed
        controladorVentanaPrincipal.AbrirAñadirSerie();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaSerieActionPerformed

    private void jTableMiListaSeriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMiListaSeriesMouseClicked
        int columna = jTableMiListaSeries.columnAtPoint(evt.getPoint());
        int fila = jTableMiListaSeries.rowAtPoint(evt.getPoint());
        switch (columna) {
            case 0:
                controladorVentanaPrincipal.AbrirVerSerie(jTableMiListaSeries.getValueAt(fila, columna).toString());
                break;

            case 6: {
                int result = JOptionPane.showConfirmDialog(this,
                        "¿Estas seguro de que quieres borrar " + jTableMiListaSeries.getValueAt(fila, 0).toString() + "?", null, JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {

                    try {
                        controladorVentanaPrincipal.borrarSerieMiLista(jTableMiListaSeries.getValueAt(fila, 0).toString());
                        controladorVentanaPrincipal.LLenarTablaSeries(modeloTablaSerie);
                        jTableMiListaSeries.repaint();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

                break;
            }
        }
    }//GEN-LAST:event_jTableMiListaSeriesMouseClicked

    private void jMenuItemAgregarMiListaMangaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarMiListaMangaActionPerformed
        controladorVentanaPrincipal.AbrirMangaMiLista();
    }//GEN-LAST:event_jMenuItemAgregarMiListaMangaActionPerformed

    private void jMenuItemNuevoMultimediaMangaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaMangaActionPerformed
        controladorVentanaPrincipal.AbrirAñadirManga();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaMangaActionPerformed

    private void jMenuItemAgregarMiListaComicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarMiListaComicActionPerformed
        controladorVentanaPrincipal.AbrirComicMiLista();
    }//GEN-LAST:event_jMenuItemAgregarMiListaComicActionPerformed

    private void jMenuItemNuevoMultimediaComicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaComicActionPerformed
        controladorVentanaPrincipal.AbrirAñadirComic();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaComicActionPerformed

    private void jMenuAgregarMiListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuAgregarMiListaActionPerformed
        controladorVentanaPrincipal.AbrirLibroMiLista();
    }//GEN-LAST:event_jMenuAgregarMiListaActionPerformed

    private void jMenuItemNuevoMultimediaVideoJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaVideoJuegoActionPerformed
        controladorVentanaPrincipal.AbrirAñadirVideojuego();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaVideoJuegoActionPerformed

    private void jMenuItemVideoJuegosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVideoJuegosActionPerformed
        controladorVentanaPrincipal.AbrirVideojuegoMiLista();
    }//GEN-LAST:event_jMenuItemVideoJuegosActionPerformed

    private void jMenuItemAgregarMiListaMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAgregarMiListaMusicaActionPerformed
        controladorVentanaPrincipal.AbrirMusicaMiLista();
    }//GEN-LAST:event_jMenuItemAgregarMiListaMusicaActionPerformed

    private void jMenuItemNuevoMultimediaMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoMultimediaMusicaActionPerformed
        controladorVentanaPrincipal.AbrirAñadirMusica();
    }//GEN-LAST:event_jMenuItemNuevoMultimediaMusicaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            controladorVentanaPrincipal.cerrarConexion();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    public JMenu getjMenuUsuario() {
        return jMenuUsuario;
    }

    public void setjMenuUsuario(JMenu jMenuUsuario) {
        this.jMenuUsuario = jMenuUsuario;
    }

    public JTable getjTableMiListaComics() {
        return jTableMiListaComics;
    }

    public void setjTableMiListaComics(JTable jTableMiListaComics) {
        this.jTableMiListaComics = jTableMiListaComics;
    }

    public JTable getjTableMiListaLibros() {
        return jTableMiListaLibros;
    }

    public void setjTableMiListaLibros(JTable jTableMiListaLibros) {
        this.jTableMiListaLibros = jTableMiListaLibros;
    }

    public JTable getjTableMiListaMangas() {
        return jTableMiListaMangas;
    }

    public void setjTableMiListaMangas(JTable jTableMiListaMangas) {
        this.jTableMiListaMangas = jTableMiListaMangas;
    }

    public JTable getjTableMiListaMusica() {
        return jTableMiListaMusica;
    }

    public void setjTableMiListaMusica(JTable jTableMiListaMusica) {
        this.jTableMiListaMusica = jTableMiListaMusica;
    }

    public JTable getjTableMiListaPeliculas() {
        return jTableMiListaPeliculas;
    }

    public void setjTableMiListaPeliculas(JTable jTableMiListaPeliculas) {
        this.jTableMiListaPeliculas = jTableMiListaPeliculas;
    }

    public JTable getjTableMiListaSeries() {
        return jTableMiListaSeries;
    }

    public void setjTableMiListaSeries(JTable jTableMiListaSeries) {
        this.jTableMiListaSeries = jTableMiListaSeries;
    }

    public JTable getjTableMiListaVideoJuegos() {
        return jTableMiListaVideoJuegos;
    }

    public void setjTableMiListaVideoJuegos(JTable jTableMiListaVideoJuegos) {
        this.jTableMiListaVideoJuegos = jTableMiListaVideoJuegos;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Principal().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelBuscadorComics;
    private javax.swing.JLabel jLabelBuscadorLibros;
    private javax.swing.JLabel jLabelBuscadorMangas;
    private javax.swing.JLabel jLabelBuscadorMusica;
    private javax.swing.JLabel jLabelBuscadorPelicuas;
    private javax.swing.JLabel jLabelBuscadorSeries;
    private javax.swing.JLabel jLabelBuscadorVideoJuegos;
    private javax.swing.JMenu jMenuAgregarMiLista;
    private javax.swing.JMenuBar jMenuBarSeleccio;
    private javax.swing.JMenu jMenuItemAgregarMiLista;
    private javax.swing.JMenuItem jMenuItemAgregarMiListaComic;
    private javax.swing.JMenuItem jMenuItemAgregarMiListaLibros;
    private javax.swing.JMenuItem jMenuItemAgregarMiListaManga;
    private javax.swing.JMenuItem jMenuItemAgregarMiListaMusica;
    private javax.swing.JMenuItem jMenuItemAgregarMiListaPeliculas;
    private javax.swing.JMenuItem jMenuItemAgregarMiListaSeries;
    private javax.swing.JMenuItem jMenuItemLogout;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaComic;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaLibro;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaManga;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaMusica;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaPelicula;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaSerie;
    private javax.swing.JMenuItem jMenuItemNuevoMultimediaVideoJuego;
    private javax.swing.JMenuItem jMenuItemVideoJuegos;
    private javax.swing.JMenu jMenuUsuario;
    private javax.swing.JPanel jPanelContenedor;
    private javax.swing.JPanel jPanelMiListaComics;
    private javax.swing.JPanel jPanelMiListaLibros;
    private javax.swing.JPanel jPanelMiListaMangas;
    private javax.swing.JPanel jPanelMiListaMusica;
    private javax.swing.JPanel jPanelMiListaPeliculas;
    private javax.swing.JPanel jPanelMiListaSeries;
    private javax.swing.JPanel jPanelMiListaVideoJuegos;
    private javax.swing.JScrollPane jScrollPaneMiListaComics;
    private javax.swing.JScrollPane jScrollPaneMiListaLibros;
    private javax.swing.JScrollPane jScrollPaneMiListaMangas;
    private javax.swing.JScrollPane jScrollPaneMiListaMusica;
    private javax.swing.JScrollPane jScrollPaneMiListaPeliculas;
    private javax.swing.JScrollPane jScrollPaneMiListaSeries;
    private javax.swing.JScrollPane jScrollPaneMiListaVideoJuegos;
    private javax.swing.JTabbedPane jTabbedPaneMiLista;
    private javax.swing.JTable jTableMiListaComics;
    private javax.swing.JTable jTableMiListaLibros;
    private javax.swing.JTable jTableMiListaMangas;
    private javax.swing.JTable jTableMiListaMusica;
    private javax.swing.JTable jTableMiListaPeliculas;
    private javax.swing.JTable jTableMiListaSeries;
    private javax.swing.JTable jTableMiListaVideoJuegos;
    private javax.swing.JTextField jTextFieldBuscarPorTituloComics;
    private javax.swing.JTextField jTextFieldBuscarPorTituloLibros;
    private javax.swing.JTextField jTextFieldBuscarPorTituloMangas;
    private javax.swing.JTextField jTextFieldBuscarPorTituloMusica;
    private javax.swing.JTextField jTextFieldBuscarPorTituloPeliculas;
    private javax.swing.JTextField jTextFieldBuscarPorTituloSeries;
    private javax.swing.JTextField jTextFieldBuscarPorTituloVideoJuegos;
    // End of variables declaration//GEN-END:variables
}
