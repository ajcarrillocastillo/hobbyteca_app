/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hobbyteca.vista;

import com.toedter.calendar.JDateChooser;
import hobbyteca.controlador.UsuarioControladorRegistro;
import hobbyteca.controlador.UsuarioControladorRegistroEnventos;
import java.awt.Cursor;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author jesus
 */
public class Registro extends javax.swing.JFrame {

    private boolean flagNombre = false;
    private boolean flagUsuario = false;
    private boolean flagEmail = false;
    private boolean flagPassword = false;
    private boolean flagValidarPassword = false;

    private final UsuarioControladorRegistro UsuarioControlador;
    private final UsuarioControladorRegistroEnventos UsuarioControladorEvento;

    /**
     * Creates new form Registro
     */
    public Registro() {
        initComponents();
        jPasswordFieldPassword.setEchoChar((char) 0);
        jPasswordFieldVerificarPassword.setEchoChar((char) 0);
        jButtonCancelar.requestFocus();
        UsuarioControlador = new UsuarioControladorRegistro(this);
        UsuarioControladorEvento = new UsuarioControladorRegistroEnventos(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelContenido = new javax.swing.JPanel();
        jLabelNombreCompleto = new javax.swing.JLabel();
        jLabelNombreUsuario = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        jLabelVerificarPassword = new javax.swing.JLabel();
        jTextFieldNombreCompleto = new javax.swing.JTextField();
        jTextFieldNombreUsuario = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jPasswordFieldPassword = new javax.swing.JPasswordField();
        jPasswordFieldVerificarPassword = new javax.swing.JPasswordField();
        jButtonRegistrar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelExisteUsuario = new javax.swing.JLabel();
        jLabelExisteEmail = new javax.swing.JLabel();
        jLabelPasswordNoCoincide = new javax.swing.JLabel();
        jCheckBoxMostrarPassword = new javax.swing.JCheckBox();
        jLabelFecha = new javax.swing.JLabel();
        jDateChooserFecha = new com.toedter.calendar.JDateChooser();
        jLabelErrorNombre = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(500, 440));

        jLabelNombreCompleto.setText("Nombre completo:");

        jLabelNombreUsuario.setText("Nombre de usuario:");

        jLabelEmail.setText("E-mail:");

        jLabelPassword.setText("Contraseña:");

        jLabelVerificarPassword.setText("Verificar Contraseña:");

        jTextFieldNombreCompleto.setForeground(new java.awt.Color(126, 126, 126));
        jTextFieldNombreCompleto.setText("Nombre Completo");
        jTextFieldNombreCompleto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNombreCompletoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNombreCompletoFocusLost(evt);
            }
        });
        jTextFieldNombreCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreCompletoActionPerformed(evt);
            }
        });
        jTextFieldNombreCompleto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreCompletoKeyTyped(evt);
            }
        });

        jTextFieldNombreUsuario.setForeground(new java.awt.Color(126, 126, 126));
        jTextFieldNombreUsuario.setText("Usuario");
        jTextFieldNombreUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNombreUsuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNombreUsuarioFocusLost(evt);
            }
        });
        jTextFieldNombreUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldNombreUsuarioKeyTyped(evt);
            }
        });

        jTextFieldEmail.setForeground(new java.awt.Color(126, 126, 126));
        jTextFieldEmail.setText("Correo Electrónico");
        jTextFieldEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEmailFocusLost(evt);
            }
        });
        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyTyped(evt);
            }
        });

        jPasswordFieldPassword.setForeground(new java.awt.Color(126, 126, 126));
        jPasswordFieldPassword.setText("Password");
        jPasswordFieldPassword.setPreferredSize(new java.awt.Dimension(92, 20));
        jPasswordFieldPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordFieldPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordFieldPasswordFocusLost(evt);
            }
        });
        jPasswordFieldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordFieldPasswordKeyTyped(evt);
            }
        });

        jPasswordFieldVerificarPassword.setForeground(new java.awt.Color(126, 126, 126));
        jPasswordFieldVerificarPassword.setText("Repetir contraseña");
        jPasswordFieldVerificarPassword.setPreferredSize(new java.awt.Dimension(92, 20));
        jPasswordFieldVerificarPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordFieldVerificarPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jPasswordFieldVerificarPasswordFocusLost(evt);
            }
        });
        jPasswordFieldVerificarPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordFieldVerificarPasswordKeyTyped(evt);
            }
        });

        jButtonRegistrar.setText("Registrar");
        jButtonRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonRegistrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonRegistrarMouseExited(evt);
            }
        });
        jButtonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonCancelarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonCancelarMouseExited(evt);
            }
        });
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jLabelPasswordNoCoincide.setBackground(new java.awt.Color(0, 0, 153));

        jCheckBoxMostrarPassword.setText("Mostrar contraseña");
        jCheckBoxMostrarPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jCheckBoxMostrarPasswordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCheckBoxMostrarPasswordMouseExited(evt);
            }
        });
        jCheckBoxMostrarPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMostrarPasswordActionPerformed(evt);
            }
        });

        jLabelFecha.setText("Fecha de Nacimiento");

        jDateChooserFecha.setDateFormatString("dd-MM-yyyy");
        jDateChooserFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jDateChooserFechaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelContenidoLayout = new javax.swing.GroupLayout(jPanelContenido);
        jPanelContenido.setLayout(jPanelContenidoLayout);
        jPanelContenidoLayout.setHorizontalGroup(
            jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                .addComponent(jLabelFecha)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNombreUsuario)
                                    .addComponent(jLabelEmail))
                                .addGap(13, 13, 13)
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelExisteEmail)
                                            .addComponent(jLabelExisteUsuario)))
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabelErrorNombre)))))
                        .addGap(0, 116, Short.MAX_VALUE))
                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNombreCompleto)
                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jButtonRegistrar)
                                .addGap(105, 105, 105)
                                .addComponent(jButtonCancelar))
                            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelPassword)
                                    .addComponent(jLabelVerificarPassword))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContenidoLayout.createSequentialGroup()
                                        .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jPasswordFieldVerificarPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                            .addComponent(jLabelPasswordNoCoincide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(6, 6, 6)
                                        .addComponent(jCheckBoxMostrarPassword))
                                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelContenidoLayout.setVerticalGroup(
            jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContenidoLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreCompleto)
                    .addComponent(jTextFieldNombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelErrorNombre))
                .addGap(20, 20, 20)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNombreUsuario)
                    .addComponent(jTextFieldNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelExisteUsuario))
                .addGap(20, 20, 20)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmail)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelExisteEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooserFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabelFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPassword))
                .addGap(18, 18, 18)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelVerificarPassword)
                    .addComponent(jPasswordFieldVerificarPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxMostrarPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelPasswordNoCoincide)
                .addGap(27, 27, 27)
                .addGroup(jPanelContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegistrar)
                    .addComponent(jButtonCancelar))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNombreCompletoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNombreCompletoFocusGained
        UsuarioControladorEvento.VaciarCampos(evt, 0);
    }//GEN-LAST:event_jTextFieldNombreCompletoFocusGained

    private void jTextFieldNombreCompletoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNombreCompletoFocusLost
        if (jTextFieldNombreCompleto.getText().isEmpty()) {
        UsuarioControladorEvento.RellenarCampos(evt, 0);
        
        }else{
           UsuarioControladorEvento.limitaNombreCompleto(4); 
        }
    }//GEN-LAST:event_jTextFieldNombreCompletoFocusLost

    private void jTextFieldNombreUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNombreUsuarioFocusGained
        UsuarioControladorEvento.VaciarCampos(evt, 1);

    }//GEN-LAST:event_jTextFieldNombreUsuarioFocusGained

    private void jTextFieldNombreUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNombreUsuarioFocusLost
        if(jTextFieldNombreUsuario.getText().isEmpty()){
        UsuarioControladorEvento.RellenarCampos(evt, 1);}
        else{
            if(UsuarioControladorEvento.limitaNombreUsuario(5)){
            try {
                UsuarioControlador.compruebaUsuarioRegistro();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error fatal con el programa contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }
    }//GEN-LAST:event_jTextFieldNombreUsuarioFocusLost

    private void jTextFieldEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEmailFocusGained
        UsuarioControladorEvento.VaciarCampos(evt, 2);

    }//GEN-LAST:event_jTextFieldEmailFocusGained

    private void jTextFieldEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEmailFocusLost

        if (jTextFieldEmail.getText().isEmpty()) {
            UsuarioControladorEvento.RellenarCampos(evt, 2);
        } else {
        if(UsuarioControladorEvento.validarEmail()){
            try {
                UsuarioControlador.compruebaEmail();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error con la bdd contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error fatal contacte con el administrador", "Error inesperado", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
        
        }
          
       
    }//GEN-LAST:event_jTextFieldEmailFocusLost

    private void jPasswordFieldPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldPasswordFocusGained
        UsuarioControladorEvento.VaciarCampos(evt, 3);

    }//GEN-LAST:event_jPasswordFieldPasswordFocusGained

    private void jPasswordFieldPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldPasswordFocusLost
        UsuarioControladorEvento.ValidarContraseñas(evt, true);
    }//GEN-LAST:event_jPasswordFieldPasswordFocusLost

    private void jPasswordFieldVerificarPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldVerificarPasswordFocusGained
        UsuarioControladorEvento.VaciarCampos(evt, 4);

    }//GEN-LAST:event_jPasswordFieldVerificarPasswordFocusGained

    private void jPasswordFieldVerificarPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFieldVerificarPasswordFocusLost
        UsuarioControladorEvento.ValidarContraseñas(evt, false);
    }//GEN-LAST:event_jPasswordFieldVerificarPasswordFocusLost

    private void jCheckBoxMostrarPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMostrarPasswordActionPerformed
        UsuarioControladorEvento.MostrarOcultarContraseña(evt);
    }//GEN-LAST:event_jCheckBoxMostrarPasswordActionPerformed


    private void jCheckBoxMostrarPasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxMostrarPasswordMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jCheckBoxMostrarPasswordMouseEntered

    private void jCheckBoxMostrarPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxMostrarPasswordMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jCheckBoxMostrarPasswordMouseExited

    private void jButtonRegistrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegistrarMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonRegistrarMouseEntered

    private void jButtonRegistrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonRegistrarMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonRegistrarMouseExited

    private void jButtonCancelarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelarMouseEntered
        setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButtonCancelarMouseEntered

    private void jButtonCancelarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelarMouseExited
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonCancelarMouseExited

    private void jTextFieldNombreCompletoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreCompletoKeyTyped
        UsuarioControladorEvento.invalidarNumeros(evt);
        UsuarioControladorEvento.caracteresMaximosTexto(evt, 100, jTextFieldNombreCompleto);
    }//GEN-LAST:event_jTextFieldNombreCompletoKeyTyped

    private void jTextFieldNombreUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreUsuarioKeyTyped
        UsuarioControladorEvento.caracteresMaximosTexto(evt, 100,jTextFieldNombreUsuario);
    }//GEN-LAST:event_jTextFieldNombreUsuarioKeyTyped

    private void jTextFieldEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyTyped
        UsuarioControladorEvento.caracteresMaximosTexto(evt, 100,jTextFieldEmail);
    }//GEN-LAST:event_jTextFieldEmailKeyTyped

    private void jPasswordFieldPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldPasswordKeyTyped
        UsuarioControladorEvento.caracteresMaximosjPassword(evt, 100, jPasswordFieldPassword);
    }//GEN-LAST:event_jPasswordFieldPasswordKeyTyped

    private void jPasswordFieldVerificarPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordFieldVerificarPasswordKeyTyped
        UsuarioControladorEvento.caracteresMaximosjPassword(evt, 100,jPasswordFieldVerificarPassword);
    }//GEN-LAST:event_jPasswordFieldVerificarPasswordKeyTyped

    private void jButtonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarActionPerformed
        if (jTextFieldNombreCompleto.getText().equals("Nombre Completo")==true|| jTextFieldNombreUsuario.getText().equals("Usuario")==true
               ||jTextFieldEmail.getText().equals("Correo Electrónico")|| jDateChooserFecha.getDate()== null || !UsuarioControladorEvento.validarEmail()
                || new String(jPasswordFieldPassword.getPassword()).equals("Password")|| new String(jPasswordFieldVerificarPassword.getPassword()).equals("Verificar Password")){
            JOptionPane.showMessageDialog(this, "Rellene todos los campos correctamente", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
        try {
            UsuarioControlador.guardarUsuario();
        } catch (SQLException ex) {
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButtonRegistrarActionPerformed

    private void jDateChooserFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooserFechaKeyTyped
        UsuarioControladorEvento.invalidarLetras(evt);// TODO add your handling code here:
    }//GEN-LAST:event_jDateChooserFechaKeyTyped

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
     UsuarioControlador.cerrarRegistro();   // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldNombreCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreCompletoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreCompletoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Registro registroCreado =new Registro();
               registroCreado.setVisible(true);
                
            }
        });
    }

    //
    //
    //* Inicio getter and setter*///
    //
    public JDateChooser getjDateChooserFecha() {

        return jDateChooserFecha;
    }

    public JPasswordField getjPasswordFieldPassword() {
        return jPasswordFieldPassword;
    }

    public JPasswordField getjPasswordFieldVerificarPassword() {
        return jPasswordFieldVerificarPassword;
    }

    public JTextField getjTextFieldEmail() {
        return jTextFieldEmail;
    }

    public JTextField getjTextFieldNombreCompleto() {
        return jTextFieldNombreCompleto;
    }

    public JTextField getjTextFieldNombreUsuario() {
        return jTextFieldNombreUsuario;
    }

    public void setjPasswordFieldPassword(JPasswordField jPasswordFieldPassword) {
        this.jPasswordFieldPassword = jPasswordFieldPassword;
    }

    public void setjPasswordFieldVerificarPassword(JPasswordField jPasswordFieldVerificarPassword) {
        this.jPasswordFieldVerificarPassword = jPasswordFieldVerificarPassword;
    }

    public void setjTextFieldEmail(JTextField jTextFieldEmail) {
        this.jTextFieldEmail = jTextFieldEmail;
    }

    public void setjTextFieldNombreCompleto(JTextField jTextFieldNombreCompleto) {
        this.jTextFieldNombreCompleto = jTextFieldNombreCompleto;
    }

    public void setjTextFieldNombreUsuario(JTextField jTextFieldNombreUsuario) {
        this.jTextFieldNombreUsuario = jTextFieldNombreUsuario;
    }

    public void setjLabelExisteEmail(JLabel jLabelExisteEmail) {
        this.jLabelExisteEmail = jLabelExisteEmail;
    }

    public void setjLabelExisteUsuario(JLabel jLabelExisteUsuario) {
        this.jLabelExisteUsuario = jLabelExisteUsuario;
    }

    public void setjLabelPasswordNoCoincide(JLabel jLabelPasswordNoCoincide) {
        this.jLabelPasswordNoCoincide = jLabelPasswordNoCoincide;
    }

    public JLabel getjLabelExisteEmail() {
        return jLabelExisteEmail;
    }

    public JLabel getjLabelExisteUsuario() {
        return jLabelExisteUsuario;
    }

    public JLabel getjLabelPasswordNoCoincide() {
        return jLabelPasswordNoCoincide;
    }

    public JButton getjButtonCancelar() {
        return jButtonCancelar;
    }

    public void setjButtonCancelar(JButton jButtonCancelar) {
        this.jButtonCancelar = jButtonCancelar;
    }

    public JButton getjButtonRegistrar() {
        return jButtonRegistrar;
    }

    public void setjButtonRegistrar(JButton jButtonRegistrar) {
        this.jButtonRegistrar = jButtonRegistrar;
    }

    public JCheckBox getjCheckBoxMostrarPassword() {
        return jCheckBoxMostrarPassword;
    }

    public void setjCheckBoxMostrarPassword(JCheckBox jCheckBoxMostrarPassword) {
        this.jCheckBoxMostrarPassword = jCheckBoxMostrarPassword;
    }

    public boolean getflagNombre() {
        return flagNombre;
    }

    public void setflagNombre(boolean flagNombre) {
        this.flagNombre = flagNombre;
    }

    public boolean getFlagUsuario() {
        return flagUsuario;
    }

    public void setflagUsuario(boolean flagUsuario) {
        this.flagUsuario = flagUsuario;
    }

    public boolean getflagEmail() {
        return flagEmail;
    }

    public void setflagEmail(boolean flagEmail) {
        this.flagEmail = flagEmail;
    }

    public boolean getflagPassword() {
        return flagPassword;
    }

    public void setflagPassword(boolean flagPassword) {
        this.flagPassword = flagPassword;
    }

    public boolean getflagValidarPassword() {
        return flagValidarPassword;
    }

    public void setflagValidarPassword(boolean flagValidarPassword) {
        this.flagValidarPassword = flagValidarPassword;
    }

    public JLabel getjLabelErrorNombre() {
        return jLabelErrorNombre;
    }

    public void setjLabelErrorNombre(JLabel jLabelErrorNombre) {
        this.jLabelErrorNombre = jLabelErrorNombre;
    }

    public String consigueFecha() {
        String fecha;
        int dia, mes, anno;
        dia = jDateChooserFecha.getCalendar().get(Calendar.DAY_OF_MONTH);
        mes = (jDateChooserFecha.getCalendar().get(Calendar.MONTH) + 1);
        anno = jDateChooserFecha.getCalendar().get(Calendar.YEAR);
        if (mes < 10) {
            if (dia < 10) {
                fecha = anno + "0" + mes + "0" + dia;
            } else {
                fecha = anno + "0" + mes + dia;
            }
        } else {
            if (dia < 10) {
                fecha = anno + mes + "0" + dia;
            } else {
                fecha = "" + anno + mes + dia;
            }
        }
        return fecha;
    }
    //
    //
    //*Fin Getter and setter*//
    //
    //

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonRegistrar;
    private javax.swing.JCheckBox jCheckBoxMostrarPassword;
    private com.toedter.calendar.JDateChooser jDateChooserFecha;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelErrorNombre;
    private javax.swing.JLabel jLabelExisteEmail;
    private javax.swing.JLabel jLabelExisteUsuario;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelNombreCompleto;
    private javax.swing.JLabel jLabelNombreUsuario;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelPasswordNoCoincide;
    private javax.swing.JLabel jLabelVerificarPassword;
    private javax.swing.JPanel jPanelContenido;
    private javax.swing.JPasswordField jPasswordFieldPassword;
    private javax.swing.JPasswordField jPasswordFieldVerificarPassword;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldNombreCompleto;
    private javax.swing.JTextField jTextFieldNombreUsuario;
    // End of variables declaration//GEN-END:variables
}

/*Recoger Datos jDateChooserFecha
 String fecha;
 int  dia, mes, anno;
 dia = jDateChooserFecha.getCalendar().get(Calendar.DAY_OF_MONTH);
 mes = (jDateChooserFecha.getCalendar().get(Calendar.MONTH) +1) ;
 anno=jDateChooserFecha.getCalendar().get(Calendar.YEAR);
 if(mes<10){
 if(dia<10){
 fecha= anno +"0"+mes+"0"+dia;
 }
 else{
 fecha= anno +"0"+mes+dia;
 }}
 else{if(dia<10){
 fecha= anno +mes+"0"+dia;
 }
 else{
 fecha=""+ anno +mes+dia;
 }
 }
   
 */
